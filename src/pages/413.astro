---
import BaseLayout from '../layouts/BaseLayout.astro';

// Security headers for error pages
Astro.response.headers.set('X-Content-Type-Options', 'nosniff');
Astro.response.headers.set('X-Frame-Options', 'DENY');
Astro.response.headers.set('X-XSS-Protection', '1; mode=block');
Astro.response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');
Astro.response.headers.set('Content-Security-Policy', "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';");
Astro.response.headers.set('Cache-Control', 'no-cache, no-store, must-revalidate');

// Set proper status code
Astro.response.status = 413;
---

<BaseLayout 
  title="413 - Payload Too Large | Bubbles Enterprise"
  description="The request payload is too large. Please reduce the size of your request and try again."
>
  <main class="min-h-screen bg-gradient-to-br from-orange-500/5 via-white to-red-500/5 flex items-center justify-center px-4">
    <div class="max-w-2xl mx-auto text-center">
      <!-- Error Icon -->
      <div class="mb-8">
        <div class="w-32 h-32 mx-auto bg-gradient-to-br from-orange-500 to-red-600 rounded-full flex items-center justify-center shadow-2xl animate-pulse-glow">
          <svg class="w-16 h-16 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"></path>
          </svg>
        </div>
      </div>

      <!-- Error Content -->
      <div class="glass-hover rounded-3xl p-8 mb-8">
        <h1 class="text-6xl font-display font-bold text-orange-600 mb-4">413</h1>
        <h2 class="text-3xl font-display font-semibold text-neutral-gray-800 mb-4">Payload Too Large</h2>
        <p class="text-lg text-neutral-gray-600 mb-6 leading-relaxed">
          The request payload is larger than the server is willing or able to process. 
          Please reduce the size of your request and try again.
        </p>
        
        <!-- Security Notice -->
        <div class="bg-orange-50 border border-orange-200 rounded-2xl p-4 mb-6">
          <div class="flex items-center space-x-2">
            <svg class="w-5 h-5 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
            </svg>
            <p class="text-sm text-orange-800 font-medium">Size Limit Protection</p>
          </div>
          <p class="text-sm text-orange-700 mt-2">
            This limit protects our servers from overload and potential security threats from oversized requests.
          </p>
        </div>

        <!-- Size Limits Info -->
        <div class="bg-blue-50 border border-blue-200 rounded-2xl p-4 mb-6">
          <h3 class="text-sm font-semibold text-blue-800 mb-3">Current Limits:</h3>
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-3 text-sm">
            <div class="flex justify-between items-center">
              <span class="text-blue-700">File Upload:</span>
              <span class="font-medium text-blue-800">50 MB</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-blue-700">Form Data:</span>
              <span class="font-medium text-blue-800">10 MB</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-blue-700">JSON Payload:</span>
              <span class="font-medium text-blue-800">5 MB</span>
            </div>
            <div class="flex justify-between items-center">
              <span class="text-blue-700">Request Headers:</span>
              <span class="font-medium text-blue-800">8 KB</span>
            </div>
          </div>
        </div>

        <!-- Action Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center mb-6">
          <a href="/" class="btn-primary inline-flex items-center space-x-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
            </svg>
            <span>Return Home</span>
          </a>
          <a href="/contact" class="btn-secondary inline-flex items-center space-x-2">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
            </svg>
            <span>Contact Support</span>
          </a>
        </div>
      </div>

      <!-- Solutions -->
      <div class="text-center">
        <h3 class="text-xl font-display font-semibold text-neutral-gray-800 mb-4">Solutions</h3>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div class="glass-hover rounded-2xl p-4">
            <svg class="w-8 h-8 text-bubble-primary mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
            </svg>
            <h4 class="font-semibold text-neutral-gray-800 mb-2">Reduce File Size</h4>
            <p class="text-sm text-neutral-gray-600">Compress images, split large files, or use file optimization tools.</p>
          </div>
          
          <div class="glass-hover rounded-2xl p-4">
            <svg class="w-8 h-8 text-bubble-primary mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
            </svg>
            <h4 class="font-semibold text-neutral-gray-800 mb-2">Upload in Parts</h4>
            <p class="text-sm text-neutral-gray-600">Break large uploads into smaller chunks or use streaming uploads.</p>
          </div>
          
          <div class="glass-hover rounded-2xl p-4">
            <svg class="w-8 h-8 text-bubble-primary mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
            </svg>
            <h4 class="font-semibold text-neutral-gray-800 mb-2">Need Higher Limits?</h4>
            <p class="text-sm text-neutral-gray-600">Call (407) 715-1790 to discuss enterprise solutions.</p>
          </div>
        </div>
      </div>
    </div>
  </main>
</BaseLayout>

<script>
  // Security: Log payload too large for monitoring
  console.warn('413 Payload Too Large - Oversized request detected');
  
  // Security: Clear any large cached data
  if ('caches' in window) {
    caches.keys().then(names => {
      names.forEach(name => {
        caches.delete(name);
      });
    });
  }
  
  // Security: Clear any sensitive form data from memory
  const forms = document.querySelectorAll('form');
  forms.forEach(form => {
    form.reset();
  });
  
  // Security: Clear large data from storage
  try {
    const storageKeys = Object.keys(localStorage);
    storageKeys.forEach(key => {
      const value = localStorage.getItem(key);
      if (value && value.length > 1024 * 100) { // Clear items larger than 100KB
        localStorage.removeItem(key);
      }
    });
    
    const sessionKeys = Object.keys(sessionStorage);
    sessionKeys.forEach(key => {
      const value = sessionStorage.getItem(key);
      if (value && value.length > 1024 * 100) { // Clear items larger than 100KB
        sessionStorage.removeItem(key);
      }
    });
  } catch (e) {
    // Storage access might be restricted
  }
  
  // Security: Clear URL parameters that might contain large data
  if (window.location.search) {
    const url = new URL(window.location);
    const params = new URLSearchParams(url.search);
    let modified = false;
    
    for (const [key, value] of params.entries()) {
      if (value.length > 1000) { // Remove parameters larger than 1KB
        params.delete(key);
        modified = true;
      }
    }
    
    if (modified) {
      url.search = params.toString();
      window.history.replaceState({}, document.title, url.toString());
    }
  }
  
  // Security: Monitor and prevent memory leaks from large objects
  window.addEventListener('beforeunload', () => {
    // Clear any large objects from memory
    if (window.largeDataObjects) {
      window.largeDataObjects = null;
    }
  });
</script>