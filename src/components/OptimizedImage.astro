---
import { Image } from 'astro:assets';

export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  decoding?: 'async' | 'sync' | 'auto';
  sizes?: string;
  priority?: boolean;
}

const {
  src,
  alt,
  width = 800,
  height = 600,
  class: className = '',
  loading = 'lazy',
  decoding = 'async',
  sizes,
  priority = false
} = Astro.props;

// Generate responsive sizes if not provided
const responsiveSizes = sizes || `
  (max-width: 640px) 100vw,
  (max-width: 1024px) 50vw,
  33vw
`;

// Determine loading strategy
const loadingStrategy = priority ? 'eager' : loading;
const fetchPriority = priority ? 'high' : 'auto';
---

<Image
  src={src}
  alt={alt}
  width={width}
  height={height}
  class={`optimized-image ${className}`}
  loading={loadingStrategy}
  decoding={decoding}
  sizes={responsiveSizes}
  fetchpriority={fetchPriority}
  format="webp"
  quality={85}
/>

<style>
  .optimized-image {
    /* Prevent layout shift */
    aspect-ratio: attr(width) / attr(height);
    object-fit: cover;
    transition: opacity 0.3s ease;
  }
  
  .optimized-image[loading="lazy"] {
    /* Improve perceived performance */
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
  }
  
  @keyframes loading {
    0% { background-position: 200% 0; }
    100% { background-position: -200% 0; }
  }
  
  .optimized-image:not([loading="lazy"]) {
    animation: none;
    background: none;
  }
</style>