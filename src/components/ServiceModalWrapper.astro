---
// ServiceModalWrapper.astro
---

<div id="service-modal-root"></div>

<script>
  // Simple modal implementation without React
  window.openServiceModal = function(serviceType) {
    const container = document.getElementById('service-modal-root');
    if (!container) return;

    // Clear existing modal
    container.innerHTML = '';

    // Create modal content based on service type
    let modalTitle, modalSubtitle, showPhotos;
    
    switch (serviceType) {
      case 'repair':
        modalTitle = 'Get Your Repair Now';
modalSubtitle = 'Send your repair information and receive a quick quote';
        showPhotos = true;
        break;
      case 'remove-replace':
        modalTitle = 'Request Removal and Replacement';
modalSubtitle = 'Provide your property details for a personalized quote';
        showPhotos = true;
        break;
      case 'new-construction':
        modalTitle = 'New Construction Quote';
modalSubtitle = 'Tell us about your construction project';
        showPhotos = false;
        break;
      default:
        modalTitle = 'Request Quote';
        modalSubtitle = 'Fill in the information below';
        showPhotos = false;
    }

    // Create modal HTML
    const modalHTML = `
      <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4" id="modal-overlay">
        <div class="bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
          <!-- Header -->
          <div class="p-6 border-b border-gray-200">
            <div class="flex justify-between items-center">
              <div>
                <h2 class="text-2xl font-bold text-gray-900">${modalTitle}</h2>
                <p class="text-gray-600 mt-1">${modalSubtitle}</p>
              </div>
              <button onclick="closeServiceModal()" class="text-gray-400 hover:text-gray-600 transition-colors">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                </svg>
              </button>
            </div>
          </div>

          <!-- Form -->
          <form onsubmit="handleServiceFormSubmit(event)" class="p-6 space-y-6" enctype="multipart/form-data">
            <!-- Contact Info -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Nome Completo *</label>
                <input type="text" name="name" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Email *</label>
                <input type="email" name="email" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Telefone *</label>
                <input type="tel" name="phone" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Gate Code (se aplicável)</label>
                <input type="text" name="gateCode" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
              </div>
            </div>

            <!-- Address -->
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Endereço Completo *</label>
              <input type="text" name="address" required placeholder="Rua, número, cidade, CEP" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
            </div>

            <!-- Description -->
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Project Description *</label>
              <textarea name="description" required rows="4" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none" placeholder="Descreva detalhadamente..."></textarea>
            </div>

            ${showPhotos ? `
            <!-- Photos -->
            <div>
              <label class="block text-sm font-medium text-gray-700 mb-2">Photos ${serviceType === 'repair' ? '(required for repairs)' : '(optional)'}</label>
              <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-blue-400 transition-colors">
                <input type="file" multiple accept="image/*" name="photos" class="hidden" id="photos-upload" ${serviceType === 'repair' ? 'required' : ''} />
                <label for="photos-upload" class="cursor-pointer">
                  <svg class="w-12 h-12 text-gray-400 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                  </svg>
                  <p class="text-gray-600">Clique para selecionar fotos</p>
                  <p class="text-sm text-gray-500 mt-1">PNG, JPG até 10MB cada (máx. 5 fotos)</p>
                </label>
              </div>
            </div>
            ` : ''}

            <!-- Submit Button -->
            <div class="flex gap-4 pt-4">
              <button type="button" onclick="closeServiceModal()" class="flex-1 px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors">
                Cancelar
              </button>
              <button type="submit" class="flex-1 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                Enviar Solicitação
              </button>
            </div>
          </form>
        </div>
      </div>
    `;

    container.innerHTML = modalHTML;
  };

  // Close modal function
  window.closeServiceModal = function() {
    const container = document.getElementById('service-modal-root');
    if (container) {
      container.innerHTML = '';
    }
  };

  // Handle form submission
  window.handleServiceFormSubmit = async function(event) {
    event.preventDefault();
    
    const form = event.target;
    const formData = new FormData(form);
    
    try {
      const response = await fetch('/api/quote', {
        method: 'POST',
        body: formData
      });
      
      const result = await response.json();
      
      if (result.success) {
        // Redirect to thank you page
        window.location.href = '/thank-you';
      } else {
        alert('Error sending request: ' + (result.message || 'Please try again'));
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Error sending request. Please try again.');
    }
    
    closeServiceModal();
  };

  // Close modal on escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeServiceModal();
    }
  });

  // Close modal when clicking outside
  document.addEventListener('click', function(e) {
    if (e.target && e.target.id === 'modal-overlay') {
      closeServiceModal();
    }
  });
</script>