document.addEventListener("DOMContentLoaded",function(){const e=document.getElementById("mobile-menu-button"),t=document.getElementById("mobile-menu");e&&t&&e.addEventListener("click",function(){t.classList.toggle("hidden")})}),document.addEventListener("DOMContentLoaded",function(){const e=document.querySelector("header");if(!e)return;if(!e.classList.contains("bg-transparent"))return;const t=e.querySelectorAll(".logo-text"),n=e.querySelectorAll(".nav-link"),s=e.querySelector(".phone-link"),o=e.querySelector("#mobile-menu-button"),a=e.querySelectorAll(".mobile-nav-link"),r=e.querySelector(".mobile-phone-link");window.addEventListener("scroll",function(){window.scrollY>50?(e.classList.remove("bg-transparent"),e.classList.add("bg-white/95","backdrop-blur-md","shadow-soft"),t.forEach(e=>{e.classList.remove("text-white","text-bubble-light"),e.classList.add("text-bubble-primary")}),n.forEach(e=>{e.classList.remove("text-white","hover:text-bubble-light"),e.classList.add("text-neutral-gray-700","hover:text-bubble-primary")}),s&&(s.classList.remove("text-white","hover:text-bubble-light"),s.classList.add("text-neutral-gray-700","hover:text-bubble-primary")),o&&(o.classList.remove("text-white","hover:bg-white/10"),o.classList.add("text-neutral-gray-700","hover:bg-neutral-gray-100")),a.forEach(e=>{e.classList.remove("text-white"),e.classList.add("text-neutral-gray-700")}),r&&(r.classList.remove("text-white"),r.classList.add("text-neutral-gray-700"))):(e.classList.add("bg-transparent"),e.classList.remove("bg-white/95","backdrop-blur-md","shadow-soft"),t.forEach(e=>{e.classList.remove("text-bubble-primary"),e.classList.add("text-white")}),n.forEach(e=>{e.classList.remove("text-neutral-gray-700","hover:text-bubble-primary"),e.classList.add("text-white","hover:text-bubble-light")}),s&&(s.classList.remove("text-neutral-gray-700","hover:text-bubble-primary"),s.classList.add("text-white","hover:text-bubble-light")),o&&(o.classList.remove("text-neutral-gray-700","hover:bg-neutral-gray-100"),o.classList.add("text-white","hover:bg-white/10")),a.forEach(e=>{e.classList.remove("text-neutral-gray-700"),e.classList.add("text-white")}),r&&(r.classList.remove("text-neutral-gray-700"),r.classList.add("text-white")))})}),document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("chatbot-container");if(!e)return;let t=!1,n=[],s=!1;function o(){const n=`\n        \x3c!-- Caixa de texto simples quando n√£o expandido --\x3e\n        <div class="${t?"hidden":"block"} fixed bottom-20 right-6 z-50">\n          <div class="bg-white rounded-lg shadow-lg border border-gray-200 p-4 w-80">\n            <div class="flex gap-2">\n              <input\n                type="text"\n                placeholder="Type your message..."\n                class="flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"\n                onclick="toggleChat()"\n                readonly\n              />\n              <button onclick="toggleChat()" class="bg-blue-600 hover:bg-blue-700 text-white p-2 rounded-lg transition-colors">\n                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        \x3c!-- Janela do chat --\x3e\n        <div class="${t?"block":"hidden"} fixed bottom-20 right-6 w-96 h-[32rem] bg-white rounded-2xl shadow-2xl border border-gray-200 overflow-hidden z-50 flex flex-col">\n          \x3c!-- Header --\x3e\n          <div class="bg-gradient-to-r from-blue-600 to-blue-800 text-white p-4 flex items-center justify-between">\n            <div class="flex items-center space-x-3">\n              <div class="w-10 h-10 bg-white/20 rounded-full flex items-center justify-center">\n                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />\n                </svg>\n              </div>\n              <div>\n                <h3 class="font-semibold">AI Assistant</h3>\n                <p class="text-xs opacity-90">Bubbles Enterprise</p>\n              </div>\n            </div>\n            <button onclick="toggleChat()" class="p-2 hover:bg-white/20 rounded-lg transition-colors">\n              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />\n              </svg>\n            </button>\n          </div>\n\n          \x3c!-- Mensagens --\x3e\n          <div class="flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50" id="chat-messages-container">\n            ${a()}\n          </div>\n\n          \x3c!-- Input --\x3e\n          <div class="p-4 border-t border-gray-200 bg-white">\n            <div class="flex gap-2">\n              <textarea\n                id="chat-message-input"\n                placeholder="Type your message..."\n                class="flex-1 p-2 border border-gray-300 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500"\n                rows="2"\n                ${s?"disabled":""}\n              ></textarea>\n              <button\n                onclick="sendChatMessage()"\n                class="bg-blue-600 hover:bg-blue-700 text-white p-2 rounded-lg disabled:opacity-50 disabled:cursor-not-allowed transition-colors"\n                ${s?"disabled":""}\n              >\n                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      `;e.innerHTML=n;const o=document.getElementById("chat-message-input");o&&o.addEventListener("keypress",e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),sendChatMessage())})}function a(){if(0===n.length)return'\n          <div class="text-center text-gray-500 mt-8">\n            <div class="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">\n              <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">\n                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />\n              </svg>\n            </div>\n            <h3 class="font-semibold text-gray-700 mb-2">Hello! I\'m your AI assistant</h3>\n            <p class="text-sm text-gray-500">How can I help you with your soffit and fascia project today?</p>\n          </div>\n        ';let e="";return n.forEach(t=>{const n="user"===t.role;e+=`\n          <div class="flex ${n?"justify-end":"justify-start"}">\n            <div class="max-w-[80%] p-3 rounded-lg ${n?"bg-blue-600 text-white":"bg-gray-100 text-gray-800"}">\n              <p class="text-sm whitespace-pre-wrap">${t.content}</p>\n              <span class="text-xs opacity-70 mt-1 block">\n                ${t.timestamp.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit"})}\n              </span>\n            </div>\n          </div>\n        `}),s&&(e+='\n          <div class="flex justify-start">\n            <div class="bg-gray-100 p-3 rounded-lg">\n              <div class="flex items-center space-x-2">\n                <div class="flex space-x-1">\n                  <div class="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>\n                  <div class="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style="animation-delay: 0.1s"></div>\n                  <div class="w-2 h-2 bg-gray-400 rounded-full animate-bounce" style="animation-delay: 0.2s"></div>\n                </div>\n                <span class="text-sm text-gray-500">Typing...</span>\n              </div>\n            </div>\n          </div>\n        '),e}window.toggleChat=function(){t=!t,o()},window.sendChatMessage=async function(){const e=document.getElementById("chat-message-input"),t=e?.value.trim();if(!t||s)return;const o={id:Date.now().toString(),role:"user",content:t,timestamp:new Date};n.push(o),e.value="",s=!0;const r=document.getElementById("chat-messages-container");r&&(r.innerHTML=a(),r.scrollTop=r.scrollHeight);try{const e=await fetch("/api/chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:t,conversationHistory:n.slice(0,-1).map(e=>({role:e.role,content:e.content}))})}),s=await e.json();if(!s.success)throw new Error(s.error);{const e={id:(Date.now()+1).toString(),role:"assistant",content:s.message,timestamp:new Date};n.push(e)}}catch(i){const e={id:(Date.now()+1).toString(),role:"assistant",content:"Desculpe, ocorreu um erro. Tente novamente em alguns instantes.",timestamp:new Date};n.push(e)}finally{s=!1;const e=document.getElementById("chat-messages-container");e&&(e.innerHTML=a(),e.scrollTop=e.scrollHeight);const t=document.getElementById("chat-message-input");t&&(t.disabled=!1,t.addEventListener("keypress",e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),sendChatMessage())}))}},o()});
